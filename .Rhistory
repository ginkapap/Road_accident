knitr::opts_chunk$set(echo = FALSE)
use_condaenv("/anaconda3/envs/m-team")
knitr::opts_chunk$set(echo = FALSE)
library(reticulate)
library(reshape2)
library(dplyr)
library(ggplot2)
library(mice)
library(tidyr)
library(DMwR)
library(gplots)
library(caret)
library(tidyverse)
library(leaflet)
library(xts)
library(chron)
knitr::opts_chunk$set(echo = FALSE)
use_python("/anaconda3/bin/python3.6", required = T)
use_condaenv("/anaconda3/envs/m-team")
source_python("/Users/liguanzhi/Desktop/iui.py")
knitr::opts_chunk$set(echo = FALSE)
use_python("/anaconda3/bin/python3.6", required = T)
use_condaenv("/anaconda3/envs/m-team")
source_python("//Users/liguanzhi/git/Road_accident/iui.py")
dfna
df21 %>% filter(accident_severity == 1) -> df23
df21 %>% filter(accident_severity != 1) -> df24
df23$tt <- as.POSIXct(df23$time, format="%H:%M:%S")
setNames(data.frame(table(df23$tt)),c("Date","Count")) ->dk
dk$Date <- as.POSIXct((dk$Date), tz = "GMT")
df24$tt <- as.POSIXct(df24$time, format="%H:%M:%S")
setNames(data.frame(table(df24$tt)),c("Date","Count")) ->dj
dj$Date <- as.POSIXct((dj$Date), tz = "GMT")
dk$id = "one"
dj$id = "two"
df = rbind(dj, dk)
ggplot(df, aes(x = df$Date,y=Count,color=id)) + geom_line(size = 0.25)  +
scale_x_datetime(date_labels = "%H:%M", date_breaks = "3 hour")+ scale_y_continuous(limits = c(0,250))+ stat_smooth(color = "#FC4E05", fill = "#FC4E18",method = "loess") + xlab("時間") + ylab("死亡車禍次數")+theme(text=element_text(family="黑體-繁 中黑", size=14))
df3 <- df2 %>% select(-time)
cormat <- round(cor(df3),2)
melted_cormat <- melt(cormat)
melted_cormat%>% filter(melted_cormat$Var1 == 'accident_severity')
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() + theme(axis.text.x = element_text(angle=90, hjust=1, vjust=.5),axis.text=element_text(size=5))
df21$casualty_severity=factor(df21$casualty_severity)
ggplot(df21, aes(accident_severity, fill=casualty_severity)) + geom_bar(position="fill")
knitr::opts_chunk$set(echo = FALSE)
use_python("/anaconda3/bin/python3.6", required = T)
knitr::opts_chunk$set(echo = FALSE)
library(reticulate)
library(reshape2)
library(dplyr)
library(ggplot2)
library(mice)
install.packages("mice")
library(reticulate)
library(reshape2)
library(dplyr)
library(ggplot2)
library(mice)
library(tidyr)
library(DMwR)
install.packages("DMwR")
library(reticulate)
library(reshape2)
library(dplyr)
library(ggplot2)
library(mice)
library(tidyr)
library(DMwR)
library(gplots)
library(caret)
library(tidyverse)
library(leaflet)
install.packages("leaflet")
library(reticulate)
library(reshape2)
library(dplyr)
library(ggplot2)
library(mice)
library(tidyr)
library(DMwR)
library(gplots)
library(caret)
library(tidyverse)
library(leaflet)
library(xts)
library(chron)
install.packages("chron")
library(reticulate)
library(reshape2)
library(dplyr)
library(ggplot2)
library(mice)
library(tidyr)
library(DMwR)
library(gplots)
library(caret)
library(tidyverse)
library(leaflet)
library(xts)
library(chron)
knitr::opts_chunk$set(echo = FALSE)
use_python("/anaconda3/bin/python3.6", required = T)
knitr::opts_chunk$set(echo = FALSE)
use_condaenv("m-team")
source_python("iui.py")
use_condaenv("m-team")
source_python("iui.py")
dfna
df21 %>% filter(accident_severity == 1) -> df23
df21 %>% filter(accident_severity != 1) -> df24
df23$tt <- as.POSIXct(df23$time, format="%H:%M:%S")
setNames(data.frame(table(df23$tt)),c("Date","Count")) ->dk
dk$Date <- as.POSIXct((dk$Date), tz = "GMT")
df24$tt <- as.POSIXct(df24$time, format="%H:%M:%S")
setNames(data.frame(table(df24$tt)),c("Date","Count")) ->dj
dj$Date <- as.POSIXct((dj$Date), tz = "GMT")
dk$id = "one"
dj$id = "two"
df = rbind(dj, dk)
ggplot(df, aes(x = df$Date,y=Count,color=id)) + geom_line(size = 0.25)  +
scale_x_datetime(date_labels = "%H:%M", date_breaks = "3 hour")+ scale_y_continuous(limits = c(0,250))+ stat_smooth(color = "#FC4E05", fill = "#FC4E18",method = "loess") + xlab("時間") + ylab("死亡車禍次數")+theme(text=element_text(family="黑體-繁 中黑", size=14))
library(ggplot)
knitr::opts_chunk$set(echo = FALSE)
df21 %>% filter(accident_severity == 1) -> df23
df21 %>% filter(accident_severity != 1) -> df24
df23$tt <- as.POSIXct(df23$time, format="%H:%M:%S")
setNames(data.frame(table(df23$tt)),c("Date","Count")) ->dk
dk$Date <- as.POSIXct((dk$Date), tz = "GMT")
df24$tt <- as.POSIXct(df24$time, format="%H:%M:%S")
setNames(data.frame(table(df24$tt)),c("Date","Count")) ->dj
dj$Date <- as.POSIXct((dj$Date), tz = "GMT")
dk$id = "one"
dj$id = "two"
df = rbind(dj, dk)
ggplot(df, aes(x = df$Date,y=Count,color=id)) + geom_line(size = 0.25)  +
scale_x_datetime(date_labels = "%H:%M", date_breaks = "3 hour")+ scale_y_continuous(limits = c(0,250))+ stat_smooth(color = "#FC4E05", fill = "#FC4E18",method = "loess") + xlab("時間") + ylab("死亡車禍次數")+theme(text=element_text(family="黑體-繁 中黑", size=14))
df3 <- df2 %>% select(-time)
cormat <- round(cor(df3),2)
melted_cormat <- melt(cormat)
melted_cormat%>% filter(melted_cormat$Var1 == 'accident_severity')
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() + theme(axis.text.x = element_text(angle=90, hjust=1, vjust=.5),axis.text=element_text(size=5))
df21$casualty_severity=factor(df21$casualty_severity)
ggplot(df21, aes(accident_severity, fill=casualty_severity)) + geom_bar(position="fill")
ggplot(df21, aes(accident_severity, fill=factor(vehicle_type))) + geom_bar(position="fill")
ggplot(df21, aes(accident_severity, fill=factor(did_police_officer_attend_scene_of_accident))) + geom_bar(position="fill")
ggplot(df21, aes(accident_severity, fill=factor(speed_limit))) + geom_bar(position="fill")
ggplot(df21, aes(skidding_and_overturning, fill=factor(accident_severity))) + geom_bar(position="fill")
ggplot(df21, aes(x=df21$age_of_driver,y=df21$age_of_casualty,colour=factor(df21$accident_severity))) + geom_point(alpha=0.06)
df21$`1st_point_of_impact`=factor(df21$`1st_point_of_impact`)
df21$accident_severity =factor(df21$accident_severity)
map<-leaflet(df23)%>%
addTiles()%>%
setView(lng=-1,lat=52,zoom=7)
map %>%  addCircles(lng = df23$longitude,lat = df23$latitude,radius=df23$accident_severity,fillColor = topo.colors(10, alpha = 0.1))
map<-leaflet(df23)%>%
addTiles()%>%
setView(lng=-1,lat=52,zoom=7)
map %>%  addCircles(lng = df23$longitude,lat = df23$latitude,radius=df23$accident_severity,fillColor = topo.colors(10, alpha = 0.1))
qplot(accident_severity, age_band_of_driver, data = df21, geom = c("boxplot"),
fill = accident_severity)+ ylim(0, 10) + stat_summary(fun.y = "mean", geom = "point", shape = 25, size = 2, fill = "blue")
qplot(accident_severity, age_band_of_driver, data = df21, geom = c("boxplot"),
fill = accident_severity)+ ylim(0, 10) + stat_summary(fun.y = "mean", geom = "point", shape = 25, size = 2, fill = "blue")
library(doParallel)
cl = makeCluster(2)
registerDoParallel(cl)
set.seed(1234) # so that the indices will be the same when re-run
trainIndices = createDataPartition(df21$accident_severity, p=.8, list=F)
df21_train = df21 %>%
slice(trainIndices)
df21_test = df21 %>%
slice(-trainIndices)
cv_opts = trainControl(method='cv', number=10)
knitr::opts_chunk$set(echo = FALSE)
ggplot(df, aes(x = df$Date,y=Count,color=id)) + geom_line(size = 0.25)  +
scale_x_datetime(date_labels = "%H:%M", date_breaks = "3 hour")+ scale_y_continuous(limits = c(0,250))+ stat_smooth(color = "#FC4E05", fill = "#FC4E18",method = "loess") + xlab("時間") + ylab("死亡車禍次數")
library(showtext)
showtext_auto()
knitr::opts_chunk$set(echo = FALSE)
library(showtext)
showtext_auto()
ggplot(df, aes(x = df$Date,y=Count,color=id)) + geom_line(size = 0.25)  +
scale_x_datetime(date_labels = "%H:%M", date_breaks = "3 hour")+ scale_y_continuous(limits = c(0,250))+ stat_smooth(color = "#FC4E05", fill = "#FC4E18",method = "loess") + xlab("時間") + ylab("死亡車禍次數")
knitr::opts_chunk$set(echo = FALSE)
dfna
library(kableExtra)
knitr::opts_chunk$set(echo = FALSE)
dfna %>% kable()
knitr::opts_chunk$set(echo = FALSE)
dfna %>% kable() %>% kable_styling()
knitr::opts_chunk$set(echo = FALSE)
dfna %>% kable() %>% kable_styling() %>% scroll_box(height = "200px")
knitr::opts_chunk$set(echo = FALSE)
df21 %>% filter(accident_severity == 1) -> df23
df21 %>% filter(accident_severity != 1) -> df24
df23$tt <- as.POSIXct(df23$time, format="%H:%M:%S")
setNames(data.frame(table(df23$tt)),c("Date","Count")) ->dk
dk$Date <- as.POSIXct((dk$Date), tz = "GMT")
df24$tt <- as.POSIXct(df24$time, format="%H:%M:%S")
setNames(data.frame(table(df24$tt)),c("Date","Count")) ->dj
dj$Date <- as.POSIXct((dj$Date), tz = "GMT")
dk$id = "one"
dj$id = "two"
df = rbind(dj, dk)
ggplot(df, aes(x = df$Date,y=Count,color=id)) + geom_line(size = 0.25)  +
scale_x_datetime(date_labels = "%H:%M", date_breaks = "3 hour")+ scale_y_continuous(limits = c(0,250))+ stat_smooth(color = "#FC4E05", fill = "#FC4E18",method = "loess") + xlab("時間") + ylab("死亡車禍次數")
knitr::opts_chunk$set(echo = FALSE)
```{r warning=FALSE}
df21 %>% filter(accident_severity == 1) -> df23
df21 %>% filter(accident_severity != 1) -> df24
df23$tt <- as.POSIXct(df23$time, format="%H:%M:%S")
setNames(data.frame(table(df23$tt)),c("Date","Count")) ->dk
dk$Date <- as.POSIXct((dk$Date), tz = "GMT")
df24$tt <- as.POSIXct(df24$time, format="%H:%M:%S")
setNames(data.frame(table(df24$tt)),c("Date","Count")) ->dj
dj$Date <- as.POSIXct((dj$Date), tz = "GMT")
dk$id = "one"
dj$id = "two"
df = rbind(dj, dk)
ggplot(df, aes(x = df$Date,y=Count,color=id)) + geom_line(size = 0.25)  +
scale_x_datetime(date_labels = "%H:%M", date_breaks = "3 hour")+ scale_y_continuous(limits = c(0,250))+ stat_smooth(color = "#FC4E05", fill = "#FC4E18",method = "loess") + xlab("時間") + ylab("死亡車禍次數")
knitr::opts_chunk$set(echo = FALSE)
dk$id = "一般車禍"
dj$id = "two"
df = rbind(dj, dk)
ggplot(df, aes(x = df$Date,y=Count,color=id)) + geom_line(size = 0.25)  +
scale_x_datetime(date_labels = "%H:%M", date_breaks = "3 hour")+ scale_y_continuous(limits = c(0,250))+ stat_smooth(color = "#FC4E05", fill = "#FC4E18",method = "loess") + xlab("時間") + ylab("死亡車禍次數")
knitr::opts_chunk$set(echo = FALSE)
dj$id = "死亡車禍"
df = rbind(dj, dk)
ggplot(df, aes(x = df$Date,y=Count,color=id)) + geom_line(size = 0.25)  +
scale_x_datetime(date_labels = "%H:%M", date_breaks = "3 hour")+ scale_y_continuous(limits = c(0,250))+ stat_smooth(color = "#FC4E05", fill = "#FC4E18",method = "loess") + xlab("時間") + ylab("死亡車禍次數")
knitr::opts_chunk$set(echo = FALSE)
df21 %>% filter(accident_severity == 1) -> df23
df21 %>% filter(accident_severity != 1) -> df24
df23$tt <- as.POSIXct(df23$time, format="%H:%M:%S")
setNames(data.frame(table(df23$tt)),c("Date","Count")) ->dk
dk$Date <- as.POSIXct((dk$Date), tz = "GMT")
df24$tt <- as.POSIXct(df24$time, format="%H:%M:%S")
setNames(data.frame(table(df24$tt)),c("Date","Count")) ->dj
dj$Date <- as.POSIXct((dj$Date), tz = "GMT")
dk$id = "死亡車禍"
dj$id = "一般車禍"
df = rbind(dj, dk)
ggplot(df, aes(x = df$Date,y=Count,color=id)) + geom_line(size = 0.25)  +
scale_x_datetime(date_labels = "%H:%M", date_breaks = "3 hour")+ scale_y_continuous(limits = c(0,250))+ stat_smooth(color = "#FC4E05", fill = "#FC4E18",method = "loess") + xlab("時間") + ylab("死亡車禍次數")
knitr::opts_chunk$set(echo = FALSE)
map<-leaflet(df23)%>%
addTiles()%>%
setView(lng=-1,lat=52,zoom=7)
map %>%  addCircles(lng = df23$longitude,lat = df23$latitude,radius=df23$accident_severity,fillColor = topo.colors(10, alpha = 0.1))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(magrittr)
library(kableExtra)
library(DT)
install.packages("DT")
install.packages("DT")
install.packages("DT")
install.packages("DT")
library(reticulate)
library(reshape2)
library(dplyr)
library(ggplot2)
library(mice)
library(tidyr)
library(DMwR)
library(gplots)
library(caret)
library(tidyverse)
library(leaflet)
library(xts)
library(chron)
library(showtext)
showtext_auto()
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(magrittr)
library(kableExtra)
library(DT)
install.packages("htmlwidgets")
install.packages("htmlwidgets")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(knitr)
library(magrittr)
library(kableExtra)
library(DT)
library(stringr)
library(readr)
library(htmltools)
library(ggplot2)
library(lubridate)
library(tidyr)
library(purrr)
library(showtext)
font_add("QYuan","cwTeXQYuan-Medium.ttf")
knitr::opts_chunk$set(echo = FALSE)
use_condaenv("m-team")
knitr::opts_chunk$set(echo = FALSE)
use_condaenv("m-team")
library(reticulate)
library(reshape2)
library(dplyr)
library(ggplot2)
library(mice)
library(tidyr)
library(DMwR)
library(gplots)
library(caret)
library(tidyverse)
library(leaflet)
library(xts)
library(chron)
library(showtext)
showtext_auto()
library(kableExtra)
use_condaenv("m-team")
source_python("iui.py")
dfna %>% kable() %>% kable_styling() %>% scroll_box(height = "200px")
library(doParallel)
cl = makeCluster(2)
registerDoParallel(cl)
set.seed(1234) # so that the indices will be the same when re-run
trainIndices = createDataPartition(df21$accident_severity, p=.8, list=F)
df21_train = df21 %>%
slice(trainIndices)
df21_test = df21 %>%
slice(-trainIndices)
cv_opts = trainControl(method='cv', number=10)
knitr::opts_chunk$set(echo = FALSE)
df21 %>% filter(accident_severity == 1) -> df23
df21 %>% filter(accident_severity != 1) -> df24
df23$tt <- as.POSIXct(df23$time, format="%H:%M:%S")
setNames(data.frame(table(df23$tt)),c("Date","Count")) ->dk
dk$Date <- as.POSIXct((dk$Date), tz = "GMT")
df24$tt <- as.POSIXct(df24$time, format="%H:%M:%S")
setNames(data.frame(table(df24$tt)),c("Date","Count")) ->dj
dj$Date <- as.POSIXct((dj$Date), tz = "GMT")
dk$id = "死亡車禍"
dj$id = "一般車禍"
df = rbind(dj, dk)
ggplot(df, aes(x = df$Date,y=Count,color=id)) + geom_line(size = 0.25)  +
scale_x_datetime(date_labels = "%H:%M", date_breaks = "3 hour")+ scale_y_continuous(limits = c(0,250))+ stat_smooth(color = "#FC4E05", fill = "#FC4E18",method = "loess") + xlab("時間") + ylab("死亡車禍次數")
knitr::opts_chunk$set(echo = FALSE)
library(doParallel)
cl = makeCluster(2)
registerDoParallel(cl) # 平行運算cpu設為兩顆
set.seed(1234) # so that the indices will be the same when re-run
trainIndices = createDataPartition(df21$accident_severity, p=.8, list=F)
df_train = df21 %>%
slice(trainIndices)
df_test = df21 %>%
slice(-trainIndices)
trainIndicesV = createDataPartition(df_train$accident_severity, p=0.7, list = FALSE)
dftrain <- df_train[trainIndicesV,]
dftest <- df_train[-trainIndicesV,]
cv_opts = trainControl(method='cv', number=10)
